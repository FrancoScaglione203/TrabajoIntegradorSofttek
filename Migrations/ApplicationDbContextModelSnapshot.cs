// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrabajoIntegradorSofttek.DataAccess;

#nullable disable

namespace TrabajoIntegradorSofttek.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TrabajoIntegradorSofttek.Entities.Proyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("proyecto_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("proyecto_activo");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("proyecto_direccion");

                    b.Property<int>("Estado")
                        .HasColumnType("int")
                        .HasColumnName("proyecto_estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("proyecto_nombre");

                    b.HasKey("Id");

                    b.ToTable("Proyectos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Direccion = "Santa Fe 674, Rio Negro",
                            Estado = 1,
                            Nombre = "Vaca Muerta"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Direccion = "Cajaraville 1093, Neuquen",
                            Estado = 2,
                            Nombre = "Nueva Nieve"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Direccion = "Los Ceibos 5732, Chubut",
                            Estado = 3,
                            Nombre = "Salinas Rojas"
                        });
                });

            modelBuilder.Entity("TrabajoIntegradorSofttek.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("role_activo");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("role_description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("role_name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Description = "Admin",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Description = "Consulta",
                            Name = "Consulta"
                        });
                });

            modelBuilder.Entity("TrabajoIntegradorSofttek.Entities.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("servicio_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("servicio_activo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("servicio_descripcion");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("servicio_estado");

                    b.Property<decimal>("ValorHora")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("servicio_valorHora");

                    b.HasKey("Id");

                    b.ToTable("Servicios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Descripcion = "Perforacion",
                            Estado = true,
                            ValorHora = 500m
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Descripcion = "Extraccion",
                            Estado = true,
                            ValorHora = 400m
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Descripcion = "Transporte",
                            Estado = true,
                            ValorHora = 300m
                        });
                });

            modelBuilder.Entity("TrabajoIntegradorSofttek.Entities.Trabajo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("trabajo_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("trabajo_activo");

                    b.Property<int>("CantHoras")
                        .HasColumnType("int")
                        .HasColumnName("trabajo_cantHoras");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("trabajo_costo");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("trabajo_fecha");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("int")
                        .HasColumnName("proyecto_id");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int")
                        .HasColumnName("servicio_id");

                    b.Property<decimal>("ValorHora")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("trabajo_valorHora");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("ServicioId");

                    b.ToTable("Trabajos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            CantHoras = 1000,
                            Costo = 150000m,
                            Fecha = new DateTime(2023, 9, 19, 21, 42, 43, 608, DateTimeKind.Local).AddTicks(6940),
                            ProyectoId = 1,
                            ServicioId = 1,
                            ValorHora = 150m
                        });
                });

            modelBuilder.Entity("TrabajoIntegradorSofttek.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("usuario_activo");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)")
                        .HasColumnName("usuario_clave");

                    b.Property<int>("Dni")
                        .HasColumnType("int")
                        .HasColumnName("usuario_dni");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("usuario_nombre");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Dni = 41826520,
                            Nombre = "Franco",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Dni = 11824320,
                            Nombre = "Eliana",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Dni = 42446530,
                            Nombre = "Juan",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("TrabajoIntegradorSofttek.Entities.Trabajo", b =>
                {
                    b.HasOne("TrabajoIntegradorSofttek.Entities.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrabajoIntegradorSofttek.Entities.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("TrabajoIntegradorSofttek.Entities.Usuario", b =>
                {
                    b.HasOne("TrabajoIntegradorSofttek.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
